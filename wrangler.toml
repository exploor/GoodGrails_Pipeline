name = "bookstore-api"
main = "src/index.ts"
compatibility_date = "2024-10-01"
node_compat = true

# Account ID
account_id = "954612afb5a97bb15dddcdc70176813d"

# D1 Database binding
[[d1_databases]]
binding = "DB"
database_name = "bookstore-db"
database_id = "a6958759-920f-464b-9eb8-9d44257cfe3b"

# Vectorize binding (create index first via CLI)
# wrangler vectorize create book-embeddings --dimensions=768 --metric=cosine
# Uncomment after creating the index:
# [[vectorize]]
# binding = "VECTORIZE_INDEX"
# index_name = "book-embeddings"

# Workers AI binding (for embeddings)
# Uncomment if needed:
# [ai]
# binding = "AI"

# R2 bucket binding (for assets)
[[r2_buckets]]
binding = "ASSETS"
bucket_name = "bookstore-assets"

# KV namespace binding (for config)
[[kv_namespaces]]
binding = "CONFIG"
id = "602c9367a7794c73b52dcc9fe1cb3e1e"

# Queue for blockchain recording (create via: wrangler queues create blockchain-queue)
# Uncomment after creating the queue:
# [[queues.producers]]
# binding = "BLOCKCHAIN_QUEUE"
# queue = "blockchain-queue"
#
# [[queues.consumers]]
# queue = "blockchain-queue"
# max_batch_size = 10
# max_batch_timeout = 30

# Scheduled job for monthly donations (1st of month at 9am)
# Uncomment when ready:
# [triggers]
# crons = ["0 9 1 * *"]

# Public environment variables
[vars]
FRONTEND_URL = "https://yourdomain.com"
ADMIN_URL = "https://admin.yourdomain.com"
ENVIRONMENT = "production"

# Secret environment variables (set via: wrangler secret put <NAME>)
# DO NOT PUT ACTUAL VALUES HERE - use wrangler secret command
#
# Required secrets:
# - OPENAI_API_KEY (for metadata enrichment)
# - STRIPE_SECRET_KEY (for payments)
# - STRIPE_WEBHOOK_SECRET (for webhook verification)
# - BLOCKCHAIN_PRIVATE_KEY (for Base contract interaction)
# - PINATA_JWT (for IPFS uploads)
# - ADMIN_EMAIL (for notifications)
# - JWT_SECRET (for admin auth)
# - CONTRACT_ADDRESS (Base contract address)

# Development/staging environment
[env.development]
name = "bookstore-api-dev"

[env.development.vars]
FRONTEND_URL = "http://localhost:3000"
ADMIN_URL = "http://localhost:3001"
ENVIRONMENT = "development"

# Use development/test resources in dev
[[env.development.d1_databases]]
binding = "DB"
database_name = "bookstore-db"
database_id = "a6958759-920f-464b-9eb8-9d44257cfe3b"

# Routes (optional - for custom domains)
# [routes]
# pattern = "api.yourdomain.com/*"
# zone_name = "yourdomain.com"

# Compatibility flags (use array format)
compatibility_flags = ["nodejs_compat"]
